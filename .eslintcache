[{"/var/www/shopify-weather-app/src/index.tsx":"1","/var/www/shopify-weather-app/src/components/App.tsx":"2","/var/www/shopify-weather-app/src/store.tsx":"3","/var/www/shopify-weather-app/src/reducers/index.tsx":"4","/var/www/shopify-weather-app/src/actions/index.ts":"5","/var/www/shopify-weather-app/src/hooks/useGeolocation.tsx":"6","/var/www/shopify-weather-app/src/components/CityAutocomplete.tsx":"7","/var/www/shopify-weather-app/src/components/Weather.tsx":"8"},{"size":513,"mtime":1606383383375,"results":"9","hashOfConfig":"10"},{"size":2069,"mtime":1606480916842,"results":"11","hashOfConfig":"10"},{"size":237,"mtime":1606381269482,"results":"12","hashOfConfig":"10"},{"size":1648,"mtime":1606394330507,"results":"13","hashOfConfig":"10"},{"size":4913,"mtime":1606481019133,"results":"14","hashOfConfig":"10"},{"size":889,"mtime":1606400013513,"results":"15","hashOfConfig":"10"},{"size":2089,"mtime":1606401670111,"results":"16","hashOfConfig":"10"},{"size":1462,"mtime":1606480871406,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"a78phv",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"20"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/var/www/shopify-weather-app/src/index.tsx",[],["37","38"],"/var/www/shopify-weather-app/src/components/App.tsx",[],"/var/www/shopify-weather-app/src/store.tsx",[],"/var/www/shopify-weather-app/src/reducers/index.tsx",[],"/var/www/shopify-weather-app/src/actions/index.ts",[],"/var/www/shopify-weather-app/src/hooks/useGeolocation.tsx",[],["39","40"],"/var/www/shopify-weather-app/src/components/CityAutocomplete.tsx",["41","42"],"import { Autocomplete, Icon } from '@shopify/polaris';\nimport React, { useCallback, useState } from 'react';\nimport {SearchMinor} from '@shopify/polaris-icons';\n\nfunction CityAutocomplete() {\n    const deselectedOptions = [\n        {value: 'rustic', label: 'Rustic'},\n        {value: 'antique', label: 'Antique'},\n        {value: 'vinyl', label: 'Vinyl'},\n        {value: 'vintage', label: 'Vintage'},\n        {value: 'refurbished', label: 'Refurbished'},\n      ];\n      \n      const [selectedOptions, setSelectedOptions] = useState([]);\n      const [inputValue, setInputValue] = useState('');\n      const [options, setOptions] = useState(deselectedOptions);\n    \n      const updateText = useCallback(\n        (value) => {\n          setInputValue(value);\n    \n          if (value === '') {\n            setOptions(deselectedOptions);\n            return;\n          }\n    \n          const filterRegex = new RegExp(value, 'i');\n          const resultOptions = deselectedOptions.filter((option) =>\n            option.label.match(filterRegex),\n          );\n          setOptions(resultOptions);\n        },\n        [deselectedOptions],\n      );\n    \n      const updateSelection = useCallback((selected) => {\n        const selectedValue = selected.map((selectedItem:any) => {\n          const matchedOption = options.find((option) => {\n            return option.value.match(selectedItem);\n          });\n          return matchedOption && matchedOption.label;\n        });\n    \n        setSelectedOptions(selected);\n        setInputValue(selectedValue);\n      }, []);\n    \n      const textField = (\n        <Autocomplete.TextField\n          onChange={updateText}\n          label=\"Найдите город\"\n          value={inputValue}\n          prefix={<Icon source={SearchMinor} color=\"inkLighter\" />}\n          placeholder=\"Поиск\"\n        />\n      );\n    \n      return (\n          <Autocomplete\n            options={options}\n            selected={selectedOptions}\n            onSelect={updateSelection}\n            textField={textField}\n          />\n      );\n}\n\nexport default CityAutocomplete\n","/var/www/shopify-weather-app/src/components/Weather.tsx",[],{"ruleId":"43","replacedBy":"44"},{"ruleId":"45","replacedBy":"46"},{"ruleId":"43","replacedBy":"47"},{"ruleId":"45","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":6,"column":11,"nodeType":"51","endLine":12,"endColumn":8},{"ruleId":"49","severity":1,"message":"52","line":46,"column":10,"nodeType":"53","endLine":46,"endColumn":12,"suggestions":"54"},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],["55"],["56"],"react-hooks/exhaustive-deps","The 'deselectedOptions' array makes the dependencies of useCallback Hook (at line 33) change on every render. To fix this, wrap the initialization of 'deselectedOptions' in its own useMemo() Hook.","VariableDeclarator","React Hook useCallback has a missing dependency: 'options'. Either include it or remove the dependency array.","ArrayExpression",["57"],"no-global-assign","no-unsafe-negation",{"desc":"58","fix":"59"},"Update the dependencies array to be: [options]",{"range":"60","text":"61"},[1550,1552],"[options]"]